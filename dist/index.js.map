{"version":3,"sources":["../src/index.js"],"names":["require","ApolloServer","mongoose","Promise","global","connect","useNewUrlParser","db","connection","on","console","error","bind","once","err","resp","log","app","schema","introspection","playground","listen","port","process","env","PORT","then","url"],"mappings":";;AAIA;;;;;;eAJyBA,QAAQ,eAAR,C;IAAjBC,Y,YAAAA,Y;;AACRD,QAAQ,gBAAR;;AAEA,IAAME,WAAWF,QAAQ,UAAR,CAAjB;;;AAGA;AACAE,SAASC,OAAT,GAAmBC,OAAOD,OAA1B;AACAD,SAASG,OAAT,CAAiB,4DAAjB,EAA+E,EAAEC,iBAAiB,IAAnB,EAA/E;;AAEA,IAAIC,KAAKL,SAASM,UAAlB;AACAD,GAAGE,EAAH,CAAM,OAAN,EAAeC,QAAQC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,mBAA5B,CAAf;AACAH,GAAGM,IAAH,CAAQ,MAAR,EAAgB,UAASC,GAAT,EAAcC,IAAd,EAAmB;AAC/BL,YAAQM,GAAR,CAAY,sBAAZ;AACH,CAFD;;AAIA,IAAMC,MAAM,IAAIhB,YAAJ,CAAiB;AACzBiB,4BADyB;AAEzBC,mBAAe,IAFU;AAGzBC,gBAAY;AAHa,CAAjB,CAAZ;;AAMAH,IAAII,MAAJ,CAAW,EAAEC,MAAMC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAA5B,EAAX,EAA+CC,IAA/C,CAAoD,gBAAa;AAAA,QAAVC,GAAU,QAAVA,GAAU;;AAC7DjB,YAAQM,GAAR,mCAAkCW,GAAlC;AACH,CAFD","file":"index.js","sourcesContent":["const { ApolloServer } = require('apollo-server');\r\nrequire('babel-polyfill');\r\n\r\nconst mongoose = require('mongoose');\r\nimport schema from './schema.js';\r\n\r\n// configure mongodb connection\r\nmongoose.Promise = global.Promise;\r\nmongoose.connect('mongodb://user:password123@ds111188.mlab.com:11188/shopify', { useNewUrlParser: true });\r\n\r\nvar db = mongoose.connection;\r\ndb.on('error', console.error.bind(console, 'connection error:'));\r\ndb.once('open', function(err, resp){\r\n    console.log(\"Connected to MongoDB\");\r\n});\r\n\r\nconst app = new ApolloServer({\r\n    schema,\r\n    introspection: true,\r\n    playground: true,\r\n});\r\n\r\napp.listen({ port: process.env.PORT || 4000 }).then(({ url }) => {\r\n    console.log(`ğŸš€ Server ready at ${url}`);\r\n});\r\n"]}